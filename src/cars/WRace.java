/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cars;


import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.Timer;

/**
 *
 * @author jonny
 */
public class WRace extends javax.swing.JFrame{

    private long start = 0;
    private CCars cars;
    private EClass category;
    private LinkedList<CRacer> racers;
    private Map<Integer,JLabel> racer_name_label;
    private Map<Integer,JLabel> racer_laps_label;
    private HashMap<Integer,CRacer> racers_chart;
    private LapWatch race;
    
    
    /**
     * Creates new form Race
     */
    public WRace(CCars cars,EClass category, LinkedList<CRacer> racers) {
        initComponents();
        this.cars = cars;
        this.category = category;
        this.racers = racers;
        
        this.setVisible(true);
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        
        race = new LapWatch(racers,this);
        
        cars.selectRace(race);
        
        racer_laps_label = new HashMap<Integer, JLabel>();
        racer_name_label = new HashMap<Integer, JLabel>();
        racers_chart = new HashMap<Integer, CRacer>();
        int indexes = 1;
        for (Iterator<CRacer> it = racers.iterator(); it.hasNext();) {
            CRacer racer = it.next();
            racer_name_label.put(indexes, new JLabel(racer.Name()));
            racer_laps_label.put(indexes, new JLabel("0"));
            racers_chart.put(indexes, racer);
            indexes++;
        }
        fillPanel();
        paint_time();
    }

    private void fillPanel(){
        int index = 1;
        
        GridLayout layout = new GridLayout(racers.size(), 3);
        mainPane.setLayout(layout);
        
        
        for(CRacer racer : racers){
            mainPane.add(new JLabel(""+index+""));
            mainPane.add(racer_name_label.get(index));
            mainPane.add(racer_laps_label.get(index));
            jComboBox1.addItem(""+index+"");
            index++;
        }
        
        repaint();
    }
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        timeLabel = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        mainPane = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Start");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        timeLabel.setText(""+new Date().toString()+"");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel());
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPaneLayout = new javax.swing.GroupLayout(mainPane);
        mainPane.setLayout(mainPaneLayout);
        mainPaneLayout.setHorizontalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        mainPaneLayout.setVerticalGroup(
            mainPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 383, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(32, 32, 32)
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 623, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(timeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mainPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        int r = jComboBox1.getSelectedIndex() + 1;
        race.setActiveRacer(racers_chart.get(r));
        race.startRace();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

   
    /**
     * Drawing panels with results
     * every result 
     */
    public void revalidateValues(){
        racers_chart =  race.getPositions();
        for(int index = 1; index <= racers.size(); index++){
            CRacer racer = racers_chart.get(index);
            racer_name_label.get(index).setText(racer.Name());
            racer_laps_label.get(index).setText(race.getLaps(racer).getLapTimes());
        }
    }
   
    
    
    private  void paint_time(){
        Timer t = new Timer(10, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                if(race.isRacing()){
                    Date t = new Date();
                    long now = t.getTime()-race.getStartTime();
                    long milis = now%1000;
                    String h = new String();
                    long hours = (((now/1000)/60)/60)%24;
                    long seconds = (now/1000)%60;
                    long minutes = ((now/1000)/60)%60;
                    if(hours>0 && hours<1){
                        h = hours+":";
                    }
                    else{
                        h="";
                    }
                    timeLabel.setText(h+""+minutes+":"+seconds+"."+milis);
                }
            }
        });
        t.start();
    }
    
    
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel mainPane;
    private static javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables

  
    
    
}
