/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cars;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.Timer;

/**
 *
 * @author jonny
 */
public class WRace extends javax.swing.JFrame implements KeyListener {

    private long start = 0;
    private CCars cars;
    private CRace race;
    private EClass category;
    private LinkedList<CRacer> racers;
    private int key = 0;
    private boolean modify = false;
    
    
    /**
     * Creates new form Race
     */
    public WRace(CCars cars,EClass category, LinkedList<CRacer> racers) {
        initComponents();
        this.cars = cars;
        this.category = category;
        this.racers = racers;
        
        this.setVisible(true);
        jLabel1.setText("");
        setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        timeLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        racersPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Start");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        timeLabel.setText(""+new Date().toString()+"");

        jButton3.setText("Opravit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout racersPanelLayout = new javax.swing.GroupLayout(racersPanel);
        racersPanel.setLayout(racersPanelLayout);
        racersPanelLayout.setHorizontalGroup(
            racersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 595, Short.MAX_VALUE)
        );
        racersPanelLayout.setVerticalGroup(
            racersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("jLabel1");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timeLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel1)))
                        .addGap(28, 28, 28)
                        .addComponent(racersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(32, 32, 32)
                        .addComponent(jButton2)
                        .addGap(35, 35, 35)
                        .addComponent(jButton3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(timeLabel)
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 341, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(racersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(63, 63, 63))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        start = (new Date()).getTime();
        start_race();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        modify = true;
        while(key == 0){}
        race.modify(racers.get(key), cars.lastLap);
        key = 0;
        modify = false;
    }//GEN-LAST:event_jButton3ActionPerformed

    private  void start_race(){
        start = (new Date()).getTime();
        race = new CRace(category, racers);
        paint_time();
    }
   
    public void resolveRace(){
        
    }
    
    private  void paint_time(){
        Timer t = new Timer(10, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Date t = new Date();
                long now = t.getTime()-start;
                long milis = now%1000;
                String h = new String();
                long hours = (((now/1000)/60)/60)%24;
                long seconds = (now/1000)%60;
                long minutes = ((now/1000)/60)%60;
                if(hours>0 && hours<1){
                    h = hours+":";
                }
                else{
                    h="";
                }
                timeLabel.setText(h+""+minutes+":"+seconds+"."+milis);
            }
        });
        t.start();
    }
    
    
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private static javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private static javax.swing.JPanel racersPanel;
    private static javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
    public  void serial(){
        jLabel1.setText("Zmáčkněte číslo závodníka ....");
        
    }
   
    
    
    @Override
    public void keyPressed(KeyEvent e) {
    }
    /*
     * @Override public void keyReleased(KeyEvent e) { throw new
     * UnsupportedOperationException("Not supported yet."); }
     *
     */

    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        
        char key = e.getKeyChar();
        if (key == '`' || key == '~' || key == ';') {
            jLabel1.setText("Zmáčkněte číslo závodníka ....");
        }
        //Numbers
        if ((key >= '1' && key <= '9')) {
            int u = key - '0';
            if(modify){
                this.key = u;
            }
            else{
                cars.keys = u;
            }
        }
        
    }
    /*
     * Takes a timestamp
     * Returns String
     */
    private  String determineTime(long stamp){
        String time = new String();
        long milis = stamp%1000;
        long sec = (stamp/1000)%60;
        long min = ((stamp/1000)/60)%60;
        long hour = (((stamp/1000)/60)/60)%24;
        if(hour > 0){time += ""+hour+":";}
        if(min > 0){time += ""+min+":";}
        if(sec > 0){time += ""+sec+".";}
        if(milis > 0){time += ""+milis+"";}
        return time;
    }
    
    
}
